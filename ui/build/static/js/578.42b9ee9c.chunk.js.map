{"version":3,"file":"static/js/578.42b9ee9c.chunk.js","mappings":"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","sources":["api/FileBrowserApi.ts","types/Styles.ts","util.ts","Pages/FileBrowser/FileItem.tsx","Pages/FileBrowser/FileBrowser.tsx","api/Upload.ts","api/Websocket.ts","components/Crumbs.tsx","components/HeaderBar.tsx","components/PhotoContainer.tsx","components/Presentation.tsx"],"sourcesContent":["export function GetFileInfo(filepath, dispatch) {\n    var url = new URL(`${window.location.origin}/api/file`)\n    url.searchParams.append('path', filepath)\n    fetch(url.toString()).then((res) => res.json()).then((data) => {\n        dispatch({\n            type: 'update_items', items: data == null ? [] : [data]\n        })\n    })\n}\n\nexport function DeleteFile(path) {\n    var url = new URL(`${window.location.origin}/api/file`)\n    url.searchParams.append('path', path)\n    fetch(url.toString(), { method: \"DELETE\" })\n}\n\nexport function GetDirectoryData(path, dispatch) {\n    var url = new URL(`${window.location.origin}/api/directory`)\n    url.searchParams.append('path', ('/' + path).replace(/\\/\\/+/g, '/'))\n    fetch(url.toString()).then((res) => res.json()).then((data) => {\n        dispatch({\n            type: 'update_items', items: data == null ? [] : data\n        })\n    })\n}\n\nexport function CreateDirectory(path, dispatch) {\n    console.log(\"HJERE\")\n    var url = new URL(`${window.location.origin}/api/directory`)\n    url.searchParams.append('path', ('/' + path).replace(/\\/\\/+/g, '/'))\n    console.log(\"AFTR\")\n    return fetch(url.toString(), { method: \"POST\" }).then(() => GetDirectoryData(path, dispatch))\n}\n\nexport function RenameFile(existingPath, newPath) {\n    var url = new URL(\"${window.location.origin}/api/file\")\n    url.searchParams.append('existingFilepath', existingPath)\n    url.searchParams.append('newFilepath', newPath)\n    return fetch(url.toString(), { method: \"PUT\" })\n}","import { MediaImage } from '../components/PhotoContainer'\nimport styled from '@emotion/styled'\n\nexport const StyledLazyThumb = styled(MediaImage)({\n    position: \"relative\",\n\n    objectFit: \"cover\",\n    cursor: \"pointer\",\n    overflow: \"hidden\",\n\n    transitionDuration: \"200ms\",\n    transform: \"scale3d(1.00, 1.00, 1)\",\n    \"&:hover\": {\n        transitionDuration: \"200ms\",\n        transform: \"scale3d(1.03, 1.03, 1)\",\n    }\n})\n","import { itemData } from './types/FileBrowserTypes'\n\nexport function humanFileSize(bytes, si = false, dp = 1) {\n    const thresh = si ? 1000 : 1024;\n\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10 ** dp;\n\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n}\n\nexport function dateFromItemData(itemData: itemData) {\n    var date = new Date(itemData.mediaData.CreateDate)\n    if (date.getFullYear() == 0) {\n        date = new Date(itemData.modTime)\n    }\n    return date.toDateString()\n}","import { useEffect, useMemo, useState } from 'react'\n\nimport Box from '@mui/material/Box'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile'\nimport Skeleton from '@mui/material/Skeleton'\nimport Checkbox from '@mui/material/Checkbox'\nimport InputBase from '@mui/material/InputBase'\nimport Typography from '@mui/material/Typography'\nimport FormControl, { useFormControl } from '@mui/material/FormControl'\nimport Tooltip from '@mui/material/Tooltip'\n\nimport { StyledLazyThumb } from '../../types/Styles'\nimport { humanFileSize, dateFromItemData } from '../../util'\n// import { itemData } from '../../types/FileBrowserTypes'\n\nconst boxSX = {\n    outline: \"1px solid #00F0FF\",\n    color: 'gray',\n    backgroundColor: 'lightblue'\n}\n\n// type ItemProps = {\n//     itemData: itemData\n//     dispatch: React.Dispatch<fileBrowserAction>\n//     navigate: NavigateFunction\n// }\n\nfunction StartKeybaordListener(dispatch, editing, newName, filepath) {\n\n    const keyDownHandler = event => {\n        if (!editing) { return }\n        switch (event.key) {\n            case 'Escape': {\n                event.preventDefault()\n                dispatch({ type: 'reject_edit' })\n                return\n            }\n            case 'Enter': {\n                event.preventDefault()\n                if (newName == \"\") {\n                    dispatch({ type: 'reject_edit' })\n                } else {\n                    dispatch({ type: 'confirm_edit', newName: newName, file: filepath })\n                }\n                return\n            }\n        }\n\n    }\n\n    window.addEventListener('keydown', keyDownHandler)\n\n    return () => { window.removeEventListener('keydown', keyDownHandler) }\n}\n\nconst ItemVisualComponent = ({ itemData, type, isDir, imported }) => {\n    if (isDir) {\n        return (<FolderIcon style={{ width: \"80%\", height: \"80%\", cursor: \"pointer\", marginBottom: \"20%\" }} onDragOver={() => { }} />)\n    } else if (type == \"File\") {\n        return (<InsertDriveFileIcon style={{ width: \"80%\", height: \"80%\", cursor: \"pointer\", marginBottom: \"20%\" }} onDragOver={() => { }} />)\n    } else if (imported) {\n        return (<StyledLazyThumb mediaData={itemData.mediaData} quality={\"thumbnail\"} lazy={true} />)//width={\"200px\"} height={\"200px\"} sx={{ cursor: \"pointer\" }} />)\n    } else {\n        return (<Skeleton animation=\"wave\" height={\"100%\"} width={\"100%\"} variant=\"rectangular\" />)\n    }\n}\n\nconst EditingHook = ({ dispatch }) => {\n    const { focused } = useFormControl() || {}\n    const [previous, setPrevious] = useState(false)\n\n    useEffect(() => {\n        if (!focused && previous == true) {\n            dispatch({ type: 'reject_edit' })\n        } else {\n            setPrevious(focused)\n        }\n    }, [focused])\n    return (<></>)\n}\n\nconst TextBox = ({ itemData, editing, hasInfo, setRenameVal, dispatch }) => {\n\n    const filename = useMemo(() => {\n        return itemData.filepath.substring(itemData.filepath.lastIndexOf('/') + 1)\n    }, [itemData.filepath])\n\n    if (editing) {\n        let periodIndex = filename.lastIndexOf('.')\n\n        if (periodIndex != -1) {\n            var ext = filename.slice(periodIndex)\n            var basename = filename.slice(0, periodIndex)\n        } else {\n            var basename = filename\n        }\n\n        return (\n            <FormControl style={{ width: \"90%\" }}>\n                <InputBase\n                    autoFocus\n                    placeholder={basename}\n                    onClick={(e) => { e.stopPropagation() }}\n                    onChange={(e) => { setRenameVal(e.target.value) }}\n\n                    endAdornment={ext ? ext : \"\"}\n                />\n                <EditingHook dispatch={dispatch} />\n            </FormControl>\n        )\n    } else {\n        return (\n            <Tooltip title={filename} enterNextDelay={100}>\n                <Box\n                    display={\"flex\"}\n                    flexDirection={\"column\"}\n                    justifyContent={\"center\"}\n                    height={\"90%\"}\n                    width={\"90%\"}\n                    onClick={(e) => { e.stopPropagation(); dispatch({ type: 'start_editing', file: itemData.filepath }) }}\n                >\n                    <Typography noWrap style={{ margin: 0, color: \"white\", cursor: \"text\" }}>{filename} </Typography>\n                    {hasInfo && (\n                        <Box display={\"flex\"} justifyContent={\"space-evenly\"}>\n                            <Typography fontSize={12} noWrap style={{ margin: 0, color: \"white\", cursor: \"text\" }}>{humanFileSize(itemData.size)} </Typography>\n                            <Typography fontSize={12} noWrap style={{ margin: 0, color: \"white\", cursor: \"text\" }}>{dateFromItemData(itemData)} </Typography>\n                        </Box>\n                    )}\n                </Box>\n            </Tooltip>\n        )\n    }\n}\n\nexport default function Item({ itemData, editing, dispatch, anyChecked, navigate }) {\n    const hasInfo = useMemo(() => {\n        return itemData.mediaData ? true : false\n    }, [itemData.mediaData])\n\n    const [hovering, setHovering] = useState(false)\n    const [renameVal, setRenameVal] = useState(\"\")\n\n    useEffect(() => {\n        if (editing) {\n            return StartKeybaordListener(dispatch, editing, renameVal, itemData.filepath)\n        }\n    }, [editing, renameVal])\n\n    const unselectedAction = useMemo(() => {\n        let unselectedAction\n        if (itemData.isDir) {\n            unselectedAction = () => navigate((\"/files/\" + itemData.filepath).replace(/\\/\\/+/g, '/'))\n        } else if (itemData.imported) {\n            unselectedAction = () => dispatch({ type: 'set_presentation', presentingPath: itemData.filepath })\n        } else {\n            unselectedAction = () => { }\n        }\n        return unselectedAction\n    }, [])\n\n    const select = (e) => { dispatch({ type: 'set_selected', itempath: itemData.filepath, selected: !itemData.selected }) }\n\n    return (\n        <Box\n            position={\"relative\"}\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            height={\"200px\"}\n            width={\"200px\"}\n            overflow={\"hidden\"}\n            borderRadius={\"10px\"}\n            margin={\"10px\"}\n            sx={itemData.selected ? boxSX : {}}\n            onMouseOver={() => setHovering(true)}\n            onMouseLeave={() => setHovering(false)}\n            onClick={anyChecked ? select : () => { }}\n            onContextMenu={(e) => { e.preventDefault(); e.stopPropagation() }}\n        >\n            {(hovering || itemData.selected) && hasInfo && (\n                <Box width={\"100%\"}>\n                    <Checkbox\n                        name='check'\n                        checked={itemData.selected}\n                        style={{ position: \"absolute\", zIndex: 2, boxShadow: \"10px\" }}\n                        onChange={select}\n                        onClick={(e) => { e.stopPropagation() }}\n                    />\n                </Box>\n\n            )}\n            <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"} position={\"absolute\"} height={\"100%\"} width={\"100%\"} onClick={anyChecked ? () => { } : unselectedAction}>\n                <ItemVisualComponent itemData={itemData} type={itemData.mediaData?.MediaType.FriendlyName} isDir={itemData.isDir} imported={itemData.imported} />\n            </Box>\n            <Box position={\"absolute\"} display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"} p={\"10px\"} bgcolor={\"rgb(0, 0, 0, 0.50)\"} width={\"inherit\"} height={\"max-content\"} bottom={\"0px\"} textAlign={\"center\"}>\n                <TextBox itemData={itemData} editing={editing} hasInfo={hasInfo} setRenameVal={setRenameVal} dispatch={dispatch} />\n            </Box>\n        </Box>\n    )\n}","// React\nimport { useState, useEffect, useReducer, useMemo } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\n\n// MUI\nimport Box from '@mui/material/Box'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { IconButton, LinearProgress, Tooltip } from '@mui/material'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder'\nimport Badge from '@mui/material/Badge';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\n\n// Local\nimport { GetDirectoryData, CreateDirectory, RenameFile, DeleteFile } from '../../api/FileBrowserApi'\nimport Item from './FileItem'\nimport Presentation from '../../components/Presentation'\nimport HeaderBar from \"../../components/HeaderBar\"\nimport HandleFileUpload from \"../../api/Upload\"\nimport GetWebsocket, { dispatchSync } from '../../api/Websocket'\nimport { itemData } from '../../types/FileBrowserTypes'\nimport Crumbs from '../../components/Crumbs'\n\n// Other\nimport { useSnackbar } from 'notistack'\n\nconst mapToList = (dirMap) => {\n    const newList = Object.keys(dirMap).map((key) => {\n        return dirMap[key]\n    })\n\n    newList.sort((a, b) => {\n        if (a.mediaData && !b.mediaData) {\n            return -1\n        } else if (!a.mediaData && b.mediaData) {\n            return 1\n        }\n\n        if (a.filepath > b.filepath) {\n            return 1\n        } else if (a.filepath < b.filepath) {\n            return -1\n        } else {\n            return 0\n        }\n    })\n\n    return newList\n}\n\nfunction copyObject(map) {\n    var newMap = {};\n    for (var i in map) {\n        newMap[i] = map[i]\n    }\n    return { ...map }\n\n}\n\nconst fileBrowserReducer = (state, action) => {\n    switch (action.type) {\n        case 'update_items': {\n            let newMap = copyObject(state.dirMap)\n            let items: itemData[] = action.items\n            for (const item of items) {\n                item.selected = false\n                newMap[item.filepath] = item\n            }\n\n            return {\n                ...state,\n                dirMap: newMap,\n            }\n        }\n\n        case 'add_template_items': {\n            let newMap = copyObject(state.dirMap)\n            for (const tmpItem of action.files) {\n\n                let item: itemData = {\n                    filepath: state.path + tmpItem.name,\n                    isDir: false,\n                    imported: false,\n                    modTime: new Date().toString(),\n                    selected: false,\n                    mediaData: null\n                }\n                newMap[item.filepath] = item\n            }\n            return {\n                ...state,\n                dirMap: newMap,\n            }\n        }\n\n        case 'set_path': {\n            let newMap = copyObject(state.dirMap)\n            const newPath = action.path.replace(/\\/\\/+/g, '/')\n            if (newPath != state.path) {\n                newMap = {}\n            }\n            return {\n                ...state,\n                path: newPath,\n                dirMap: newMap,\n            }\n        }\n\n        case 'set_loading': {\n            return {\n                ...state,\n                loading: action.loading\n            }\n        }\n\n        case 'set_dragging': {\n            return {\n                ...state,\n                dragging: action.dragging\n            }\n        }\n\n        case 'start_editing': {\n            return {\n                ...state,\n                editing: action.file\n            }\n        }\n\n        case 'reject_edit': {\n            return {\n                ...state,\n                editing: \"\"\n            }\n        }\n\n        case 'confirm_edit': {\n            // Call api to change filename\n            let newMap = copyObject(state.dirMap)\n\n            let oldName = action.file.replace(/.*?([^/]*)$/, '$1')\n            let newName = action.newName\n            const parentDir = action.file.replace(/(.*?)[^/]*$/, '$1')\n\n            const [_, oldExt] = oldName.split('.')\n            if (oldExt) {\n                const [_, newExt] = newName.split('.')\n                if (!newExt || newExt != oldExt) {\n                    newName += \".\" + oldExt\n                }\n            }\n            let newPath = (parentDir + newName)\n\n            if (newMap[newPath]) {\n                return {\n                    ...state,\n                    editing: \"\"\n                }\n            }\n\n            RenameFile(action.file, newPath)\n\n            newMap[newPath] = newMap[action.file]\n            newMap[newPath].filepath = newPath\n\n            delete newMap[action.file]\n            return {\n                ...state,\n                dirMap: newMap,\n                editing: \"\"\n            }\n        }\n\n        case 'set_selected': {\n            let newMap = copyObject(state.dirMap)\n            let numSelected = state.numSelected\n\n            if (state.holdingShift && state.numSelected > 0 && state.lastSelected != \"\") {\n                const dirList = mapToList(state.dirMap)\n                let startIndex = dirList.findIndex((val) => val.filepath == state.lastSelected)\n                let endIndex = dirList.findIndex((val) => val.filepath == action.itempath)\n                if (endIndex < startIndex) {\n                    [startIndex, endIndex] = [endIndex, startIndex]\n                }\n                let changedCounter = 0\n                for (const val of dirList.slice(startIndex, endIndex + 1)) {\n                    if (newMap[val.filepath].selected == true) {\n                        continue\n                    }\n                    newMap[val.filepath].selected = true\n                    changedCounter += 1\n                }\n                numSelected += changedCounter\n            } else {\n                newMap[action.itempath].selected = action.selected\n                if (action.selected) {\n                    numSelected += 1\n                } else {\n                    numSelected -= 1\n                }\n            }\n            return {\n                ...state,\n                dirMap: newMap,\n                numSelected: numSelected,\n                lastSelected: action.itempath\n            }\n        }\n\n        case 'clear_selected': {\n            let newMap = copyObject(state.dirMap)\n            for (const key of Object.keys(newMap)) {\n                newMap[key].selected = false\n            }\n\n            return {\n                ...state,\n                dirMap: newMap,\n                numSelected: 0,\n                lastSelected: \"\"\n            }\n        }\n\n        case 'delete_selected': {\n            let newMap = copyObject(state.dirMap)\n            for (const key of Object.keys(newMap)) {\n                if (newMap[key].selected) {\n                    DeleteFile(key)\n                    delete newMap[key]\n                }\n            }\n            return {\n                ...state,\n                dirMap: newMap,\n                numSelected: 0\n            }\n        }\n\n        case 'delete_from_map': {\n            let newMap = copyObject(state.dirMap)\n\n            delete newMap[action.file]\n\n            return {\n                ...state,\n                dirMap: newMap\n            }\n        }\n\n        case 'holding_shift': {\n            return {\n                ...state,\n                holdingShift: action.shift,\n            }\n        }\n\n        case 'set_presentation': {\n            document.documentElement.style.overflow = \"hidden\"\n            return {\n                ...state,\n                presentingPath: action.presentingPath\n            }\n        }\n\n        case 'presentation_next': {\n            return { ...state }\n            let changeTo\n            if (state.mediaIdMap[state.presentingPath].next) {\n                changeTo = state.mediaIdMap[state.presentingPath].next\n            } else {\n                changeTo = state.presentingPath\n            }\n            return {\n                ...state,\n                presentingPath: changeTo\n            }\n        }\n\n        case 'presentation_previous': {\n            return { ...state }\n            let changeTo\n            if (state.mediaIdMap[state.presentingPath].previous) {\n                changeTo = state.mediaIdMap[state.presentingPath].previous\n            } else {\n                changeTo = state.presentingPath\n            }\n            return {\n                ...state,\n                presentingPath: changeTo\n            }\n        }\n\n        case 'stop_presenting': {\n            document.documentElement.style.overflow = \"visible\"\n            return {\n                ...state,\n                presentingPath: \"\"\n            }\n        }\n\n        default: {\n            console.error(\"Got unexpected dispatch type: \", action.type)\n            return { ...state }\n        }\n    }\n}\n\nconst HandleDrag = (event, dispatch, dragging) => {\n    event.preventDefault()\n    if (event.type === \"dragenter\" || event.type === \"dragover\") {\n        !dragging && dispatch({ type: \"set_dragging\", dragging: true })\n\n    } else {\n        dispatch({ type: \"set_dragging\", dragging: false })\n    }\n}\n\nconst HandleDrop = (event, path, dirMap, dispatch, wsSend, enqueueSnackbar) => {\n    event.preventDefault()\n    event.stopPropagation()\n    dispatch({ type: \"set_dragging\", dragging: false })\n\n    let filteredFiles = []\n    for (const file of event.dataTransfer.files) {\n        if (dirMap[path + file.name]) {\n            enqueueSnackbar(file.name + \" already exists in this directory\", { variant: \"error\" })\n        } else {\n            filteredFiles.push(file)\n        }\n    }\n\n    dispatch({ type: \"add_template_items\", files: filteredFiles })\n    if (filteredFiles.length != 0) {\n        dispatch({ type: \"set_loading\", loading: true })\n        HandleFileUpload(filteredFiles, path, wsSend)\n    }\n}\n\nfunction downloadSelected(dirMap: Map<string, itemData>, path) {\n    let itemsToDownload = []\n    for (const item of Object.values(dirMap)) {\n        if (item.selected) {\n            itemsToDownload.push(item.filepath)\n        }\n    }\n    console.log(itemsToDownload)\n\n    var url = new URL(`${window.location.origin}/api/takeout`)\n    fetch(url.toString(), { method: \"POST\", body: JSON.stringify({ items: itemsToDownload, path: path }) }).then(res => res.json()).then(data => {\n        fetch(`${url.toString()}/${data.takeoutId}`).then(res => { if (res.status != 200) { return Promise.reject() } else { return res.blob() } }).then(blob => {\n            const aElement = document.createElement('a');\n            aElement.setAttribute('download', `${data.takeoutId}.zip`);\n            const href = URL.createObjectURL(blob);\n            aElement.href = href;\n            aElement.setAttribute('target', '_blank');\n            aElement.click();\n            URL.revokeObjectURL(href);\n        }, reason => console.error(\"Could not download takeout\"))\n    })\n}\n\nfunction StartKeybaordListener(dispatch) {\n\n    const keyDownHandler = event => {\n        if (event.key === 'Escape') {\n            event.preventDefault()\n            dispatch({\n                type: 'clear_selected'\n            })\n        } else if (event.key === 'Shift') {\n            dispatch({ type: 'holding_shift', shift: true })\n        }\n        else {\n            //console.log(\"Uncaught keypress: \", event.key)\n        }\n    }\n\n    const keyUpHandler = event => {\n        if (event.key === 'Shift') {\n            dispatch({ type: 'holding_shift', shift: false })\n        }\n    }\n\n    window.addEventListener('keydown', keyDownHandler)\n    window.addEventListener('keyup', keyUpHandler)\n\n    //return () => {\n    //    document.removeEventListener('keydown', keyDownHandler)\n    //    document.removeEventListener('keyup', keyUpHandler)\n    //}\n}\n\nconst FileBrowser = () => {\n\n    const path = (\"/\" + useParams()[\"*\"] + \"/\").replace(/\\/\\/+/g, '/')\n\n    const [filebrowserState, dispatch] = useReducer(fileBrowserReducer, {\n        dirMap: new Map<string, itemData>(),\n        path: path,\n        dragging: false,\n        loading: false,\n        presentingPath: \"\",\n        numSelected: 0,\n        holdingShift: false,\n        lastSelected: \"\",\n        editing: \"\"\n    })\n\n    const { enqueueSnackbar } = useSnackbar()\n    const { wsSend, lastMessage, readyState } = GetWebsocket(enqueueSnackbar)\n    const [scanProgress, setScanProgress] = useState(0)\n    const navigate = useNavigate()\n    const [alreadyScanned, setAlreadyScanned] = useState(false)\n\n    const [contextMenu, setContextMenu] = useState<{\n        mouseX: number\n        mouseY: number\n    } | null>(null)\n\n    const handleContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault()\n        setContextMenu(\n            contextMenu === null\n                ? {\n                    mouseX: event.clientX + 2,\n                    mouseY: event.clientY - 6,\n                }\n                : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n                // Other native context menus might behave different.\n                // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n                null,\n        )\n    }\n\n    const handleClose = () => {\n        setContextMenu(null)\n    }\n\n    useEffect(() => {\n        if (readyState == 1) {\n            GetDirectoryData(path, dispatch)\n        }\n    }, [readyState])\n\n    useEffect(() => {\n        StartKeybaordListener(dispatch)\n    }, [])\n\n    useEffect(() => {\n        if (lastMessage) {\n            let msgData = JSON.parse(lastMessage.data)\n            //console.log(\"Got server msg: \", msgData)\n\n            switch (msgData[\"type\"]) {\n                case \"new_items\": {\n                    dispatch({ type: \"update_items\", items: msgData[\"content\"] })\n                    return\n                }\n                case \"finished\": {\n                    setScanProgress(0)\n                    dispatch({ type: \"set_loading\", loading: false })\n                    return\n                }\n                case \"refresh\": {\n                    GetDirectoryData(path, dispatch)\n                    return\n                }\n                case \"scan_directory_progress\": {\n                    setScanProgress((1 - (msgData[\"remainingTasks\"] / msgData[\"totalTasks\"])) * 100)\n                    return\n                }\n                case \"error\": {\n                    if (msgData[\"error\"] == \"upload_error\") {\n                        dispatch({ type: \"delete_from_map\", file: msgData[\"content\"][\"File\"] })\n                    }\n                    enqueueSnackbar(msgData[\"content\"][\"Message\"], { variant: \"error\" })\n                    return\n                }\n                default: {\n                    console.error(\"Got unexpected websocket message type: \", msgData[\"type\"])\n                    return\n                }\n            }\n        }\n    }, [lastMessage])\n\n    useEffect(() => {\n        setAlreadyScanned(false)\n        dispatch({ type: 'set_path', path: path })\n        dispatch({ type: \"set_loading\", loading: false })\n        dispatch({ type: \"clear_selected\" })\n        setScanProgress(0)\n        GetDirectoryData(path, dispatch)\n    }, [path])\n\n    const dirItems = useMemo(() => {\n        const itemsList = mapToList(filebrowserState.dirMap)\n        const anyChecked = filebrowserState.numSelected > 0 ? true : false\n        let scanRequired = false\n        const items = itemsList.map((entry: itemData) => {\n            if (entry.mediaData && !entry.imported && !entry.isDir) {\n                scanRequired = true\n            }\n            return (\n                <Box key={entry.filepath} >\n                    <Item itemData={entry} editing={filebrowserState.editing == entry.filepath} dispatch={dispatch} anyChecked={anyChecked} navigate={navigate} />\n                </Box>\n            )\n        })\n        if (scanRequired && !alreadyScanned) { setAlreadyScanned(true); dispatch({ type: \"set_loading\", loading: true }); dispatchSync(path, wsSend, false) }\n        return items\n    }, [filebrowserState.dirMap, filebrowserState.editing])\n\n    return (\n        <Box\n            sx={{\n                display: \"flex\",\n                flexDirection: 'column',\n            }}\n        >\n            <HeaderBar dispatch={dispatch} wsSend={wsSend} page={\"files\"} />\n            <Box\n                onDragOver={(event => HandleDrag(event, dispatch, filebrowserState.dragging))}\n                onDragLeave={event => HandleDrag(event, dispatch, filebrowserState.dragging)}\n                onDrop={(event => HandleDrop(event, path, filebrowserState.dirMap, dispatch, wsSend, enqueueSnackbar))}\n                bgcolor={filebrowserState.dragging ? \"rgb(200, 200, 200)\" : \"white\"}\n                display={\"flex\"}\n                flexDirection={\"column\"}\n                alignItems={\"center\"}\n                paddingLeft={0}\n                paddingRight={0}\n                minHeight={\"max-content\"}\n                height={\"93vh\"}\n                sx={{ outline: filebrowserState.dragging ? \"rgb(54, 147, 255) solid 2px\" : \"\", outlineOffset: \"-10px\" }}\n                onContextMenu={handleContextMenu}\n            >\n                {filebrowserState.presentingPath != \"\" && (\n                    <Presentation mediaData={filebrowserState.dirMap[filebrowserState.presentingPath].mediaData} dispatch={dispatch} />\n                )}\n                {filebrowserState.loading && (\n                    <Box sx={{ width: '100%' }}>\n                        {scanProgress == 0 && (\n                            <LinearProgress />\n                        )}\n                        {scanProgress != 0 && (\n                            <Box sx={{ width: '100%' }}>\n                                <LinearProgress variant=\"determinate\" value={scanProgress} />\n                                <p style={{ position: \"absolute\", left: \"6vw\" }}>Syncing filesystem with database...</p>\n                            </Box>\n                        )}\n                    </Box>\n                )}\n                {filebrowserState.numSelected > 0 && (\n                    <Box position={\"absolute\"} display={\"flex\"} left={\"5vw\"} >\n\n                        <IconButton style={{ padding: \"15px\" }} onClick={() => { dispatch({ type: \"clear_selected\" }) }}>\n                            <Tooltip title={\"Unselect All (esc)\"}>\n                                <Badge badgeContent={filebrowserState.numSelected} color=\"secondary\">\n                                    <CheckBoxIcon color=\"action\" />\n                                </Badge>\n                            </Tooltip>\n                        </IconButton>\n\n                        <IconButton style={{ padding: \"15px\" }} onClick={() => { downloadSelected(filebrowserState.dirMap, path) }}>\n                            <Tooltip title={\"Download Selected\"}>\n                                <DownloadIcon />\n                            </Tooltip>\n                        </IconButton>\n\n                        <IconButton style={{ padding: \"15px\" }} onClick={() => { dispatch({ type: \"delete_selected\" }) }}>\n                            <Tooltip title={\"Delete Selected\"}>\n                                <DeleteIcon />\n                            </Tooltip>\n                        </IconButton>\n\n                    </Box>\n                )}\n                <Box marginTop={2} marginBottom={2} width={\"max-content\"}>\n                    <Crumbs path={filebrowserState.path} includeHome={true} navigate={navigate} />\n                </Box>\n\n                <Box display={\"flex\"} justifyContent={\"center\"} width={\"100%\"} >\n                    <Box display={\"flex\"} flexDirection={\"row\"} flexWrap={\"wrap\"} width={\"90%\"} height={\"100%\"} justifyContent={\"flex-start\"} >\n                        {dirItems}\n                    </Box>\n                </Box>\n                <Menu\n                    open={contextMenu !== null}\n                    onClose={handleClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextMenu !== null\n                            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n                            : undefined\n                    }\n                >\n                    <MenuItem onClick={() => { handleClose(); CreateDirectory(path, dispatch); console.log(\"ESCAPE\"); dispatch({ type: 'start_editing', file: path }) }}>\n                        <ListItemIcon>\n                            <CreateNewFolderIcon />\n                        </ListItemIcon>\n                        New Folder\n                    </MenuItem>\n                </Menu>\n            </Box>\n        </Box >\n    )\n}\n\nexport default FileBrowser","\n\nconst PostFiles = (files, path, wsSend) => {\n    for (let file of files) {\n        PostFile(file, path, wsSend)\n    }\n}\n\nconst PostFile = (file, path, wsSend) => {\n    console.log(\"Inside!\")\n    let msg = JSON.stringify({\n        type: 'file_upload',\n        content: {\n            path: path,\n            file: file\n        },\n    })\n    wsSend(msg)\n}\n\nfunction readFile(file) {\n    return new Promise(function (resolve, reject) {\n        let fr = new FileReader();\n\n        fr.onload = function () {\n            console.log(\"HERE\");\n            resolve({ name: file.name, item64: fr.result });\n        };\n\n        fr.onerror = function () {\n            reject(fr);\n        };\n\n        fr.readAsDataURL(file);\n    });\n}\n\nconst HandleFileUpload = (filesData, path, wsSend) => {\n    let readers = []\n\n    for (let file of filesData) {\n        if (file.size > 2000000000)\n            console.log(\"This upload is going to fail\")\n        readFile(file).then(value => PostFile(value, path, wsSend))\n    }\n\n    //Promise.all(readers).then((values) => { console.log(values); PostFiles(values, path, wsSend) })\n\n}\n\nexport default HandleFileUpload","import { useEffect, useState } from 'react'\nimport useWebSocket from 'react-use-websocket'\nimport { EnqueueSnackbar, closeSnackbar } from 'notistack';\n\nexport default function GetWebsocket(snacky: EnqueueSnackbar) {\n    const WS_URL = `ws://${window.location.host}/api/ws`;\n    const [dcTimeout, setDcTimeout] = useState(null)\n    const [dcSnack, setDcSnack] = useState(null)\n\n    const { sendMessage, lastMessage, readyState } = useWebSocket(WS_URL, {\n        onOpen: () => {\n            clearTimeout(dcTimeout)\n            if (dcSnack) {\n                closeSnackbar(dcSnack)\n                snacky(\"Websocket reconnected\", { variant: \"success\" })\n                setDcSnack(null)\n            }\n            console.log('WebSocket connection established.')\n        },\n        onClose: () => {\n            if (!dcSnack && !dcTimeout) {\n                setDcTimeout(setTimeout(() => {\n                    setDcSnack(snacky(\"No connection to websocket, retrying...\", { variant: \"error\", persist: true, preventDuplicate: true }))\n                }, 2000))\n            }\n        },\n        reconnectAttempts: 25,\n        reconnectInterval: (last) => { return (last ^ 2) * 1000 },\n        shouldReconnect: () => true,\n        onReconnectStop: () => {\n            clearTimeout(dcTimeout)\n            closeSnackbar(dcSnack)\n            setDcSnack(snacky(\"Unable to connect websocket. Please refresh your page\", { variant: \"error\", persist: true, preventDuplicate: true }))\n        }\n    })\n    let wsSend = (msg: string) => { sendMessage(msg) }\n    return {\n        wsSend, lastMessage, readyState\n    }\n}\n\nexport function dispatchSync(path, wsSend, recursive) {\n    console.log(\"Doing sync\")\n    wsSend(JSON.stringify({\n        type: 'scan_directory',\n        content: {\n            path: path,\n            recursive: recursive\n        },\n    }))\n}","import Chip from '@mui/material/Chip'\nimport { createTheme, emphasize, styled } from '@mui/material/styles'\nimport Breadcrumbs from '@mui/material/Breadcrumbs'\nimport { Box } from '@mui/material'\n\n// export const StyledBreadcrumb = styled(Chip)(({ theme, success }) => {\n//     let backgroundColor\n//     if (success) {\n\n//     }\n//     else {\n//         backgroundColor =\n//             theme.palette.mode === 'light'\n//                 ? theme.palette.grey[100]\n//                 : theme.palette.grey[800]\n//     }\n//     return {\n//         backgroundColor,\n//         height: theme.spacing(3.5),\n//         color: theme.palette.text.primary,\n//         fontWeight: theme.typography.fontWeightRegular,\n//         '&:hover, &:focus': {\n//             backgroundColor: emphasize(backgroundColor, 0.06),\n//         },\n//         '&:active': {\n//             boxShadow: theme.shadows[1],\n//             backgroundColor: emphasize(backgroundColor, 0.12),\n//         },\n//     }\n// }) as typeof Chip\n\nconst customTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#1976d2',\n            contrastText: 'white',\n        }\n    },\n    typography: {\n        fontWeightRegular: \"12px\"\n    },\n\n})\n\n\nexport const StyledBreadcrumb = ({ label, success, onClick }) => {\n    let backgroundColor\n    if (success) {\n        backgroundColor = \"rgb(0, 255, 0)\"\n    }\n    else {\n        backgroundColor = \"rgb(230, 230, 230)\"\n    }\n    return (\n        <Box height={\"max-content\"} width={\"100%\"} onClick={onClick} sx={{ cursor: \"pointer\" }}>\n            <Chip label={label} sx={{\n                width: \"100%\",\n                backgroundColor,\n                height: 25,\n                color: \"white\",\n                fontWeight: customTheme.typography.fontWeightRegular,\n                '&:hover, &:focus': {\n                    backgroundColor: emphasize(backgroundColor, 0.10),\n                },\n                '&:active': {\n                    boxShadow: customTheme.shadows[1],\n                    backgroundColor: emphasize(backgroundColor, 0.12),\n                },\n            }}\n            />\n\n        </Box>\n    )\n}\n\nconst Crumbs = ({ path, includeHome, navigate }) => {\n    if (!path) {\n        return (null)\n    }\n    try {\n\n        path = path.slice(1)\n        let parts = path.split('/')\n        while (parts[parts.length - 1] == '') {\n            parts.pop()\n        }\n\n        if (includeHome) {\n            parts.unshift('/')\n        }\n        const current = parts.pop()\n\n        let crumbPaths = []\n        for (let [index, val] of parts.entries()) {\n            if (index == 0 && includeHome) {\n                crumbPaths.push(\"/\")\n                continue\n            } else {\n                crumbPaths.push(crumbPaths[index - 1] + \"/\" + val)\n            }\n        }\n        const crumbs = parts.map((part, i) => (\n            <StyledBreadcrumb key={part} label={part == \"/\" ? \"Home\" : part} success={false} onClick={() => { navigate(`/files/${crumbPaths[i]}`.replace(/\\/\\/+/g, '/')) }} />)\n        )\n        crumbs.push(\n            <StyledBreadcrumb key={current} label={current == \"/\" ? \"Home\" : current} success={false} onClick={() => { }} />\n        )\n        return (\n            <Breadcrumbs separator={\"›\"} >\n                {crumbs}\n            </Breadcrumbs>\n        )\n    }\n    catch (err) {\n        console.log(err)\n        return (null)\n    }\n}\n\nexport default Crumbs","\nimport { memo } from 'react'\n\nimport AppBar from '@mui/material/AppBar'\nimport Toolbar from '@mui/material/Toolbar'\n\nimport IconButton from '@mui/material/IconButton'\nimport UploadIcon from '@mui/icons-material/Upload'\nimport SyncIcon from '@mui/icons-material/Sync'\nimport LogoutIcon from '@mui/icons-material/Logout'\nimport Box from '@mui/material/Box'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport PhotoLibraryIcon from '@mui/icons-material/PhotoLibrary'\nimport Tooltip from '@mui/material/Tooltip'\n\nimport { useNavigate, useParams } from 'react-router-dom'\n\nimport HandleFileUpload from '../api/Upload'\nimport { dispatchSync } from '../api/Websocket'\n\nimport { SendMessage } from 'react-use-websocket'\nimport { TextField, alpha, styled } from '@mui/material'\nimport InputBase from '@mui/material/InputBase'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { useCookies } from 'react-cookie'\n\ntype HeaderBarProps = {\n    dispatch: React.Dispatch<any>\n    wsSend: SendMessage\n    page: string,\n}\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\n\n\nconst HeaderBar = memo(function HeaderBar({ dispatch, wsSend, page }: HeaderBarProps) {\n    const [cookies, setCookie, removeCookie] = useCookies(['weblens-login-token']);\n    const nav = useNavigate()\n\n    let path = (useParams()[\"*\"] + \"/\").replace(/\\/\\/+/g, '/')\n    if (page == \"gallery\") {\n        path = \"/\"\n    }\n\n    return (\n        <Box sx={{ flexGrow: 1 }} zIndex={1} pt={1} maxWidth={\"100vw\"}>\n            <AppBar\n                position=\"static\"\n                color='transparent'\n                style={{ boxShadow: \"none\" }}\n            >\n                <Toolbar style={{ paddingLeft: \"25px\" }}>\n                    {page == \"gallery\" && (\n                        <Tooltip title={\"Files\"}>\n                            <IconButton href={\"/files/\"} edge=\"start\" color=\"inherit\" aria-label=\"files\" style={{ margin: 10, flexDirection: \"column\", fontSize: 20 }}>\n                                <FolderIcon />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    {page == \"files\" && (\n                        <Tooltip title={\"Gallery\"}>\n                            <IconButton href={\"/\"} edge=\"start\" color=\"inherit\" aria-label=\"files\" style={{ margin: 15, flexDirection: \"column\", fontSize: 20 }}>\n                                <PhotoLibraryIcon />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    <Tooltip title={\"Sync\"}>\n                        <IconButton onClick={() => { dispatch({ type: 'set_loading', loading: true }); dispatchSync(path, wsSend, true) }} edge=\"start\" color=\"inherit\" aria-label=\"upload\" style={{ margin: 10, flexDirection: \"column\", fontSize: 20 }}>\n                            <SyncIcon />\n                    </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={\"Upload\"}>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"upload\" style={{ margin: 10, flexDirection: \"column\", fontSize: 20 }}>\n                        <input\n                            id=\"upload-image\"\n                            hidden\n                            accept=\"image/*\"\n                            type=\"file\"\n                            onChange={(e) => HandleFileUpload(e.target.files[0], \"/\", null)}\n                            />\n                            <UploadIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <Search>\n                        <SearchIconWrapper>\n                            <SearchIcon />\n                        </SearchIconWrapper>\n                        <StyledInputBase\n                            placeholder=\"Search…\"\n                            inputProps={{ 'aria-label': 'search' }}\n                            onChange={e => dispatch({ type: 'set_search', search: e.target.value })}\n                        />\n                    </Search>\n                    <Tooltip title={\"Logout\"} >\n                        <IconButton edge=\"end\" color=\"inherit\" aria-label=\"logout\" style={{ margin: 10, flexDirection: \"column\", fontSize: 20 }} onClick={() => { removeCookie('weblens-login-token'); nav(\"/login\") }}>\n                            <LogoutIcon />\n                        </IconButton>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n})\n\nexport default HeaderBar","import { useState, useEffect, useRef, useMemo, ComponentProps } from \"react\";\nimport { Blurhash } from \"react-blurhash\";\nimport ReactPlayer from 'react-player'\n\nimport Box from '@mui/material/Box';\nimport { CircularProgress } from '@mui/material'\nimport styled from \"@emotion/styled\";\n\n// Styles\n\nconst ThumbnailContainer = styled(Box)({\n    top: 0,\n    left: 0,\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    position: \"absolute\",\n    justifyContent: \"center\",\n    overflow: \"hidden\",\n    objectFit: \"contain\"\n})\n\nconst StyledLoader = styled(CircularProgress)({\n    position: \"absolute\",\n    zIndex: 1,\n    bottom: \"10px\",\n    right: \"10px\",\n    color: \"rgb(255, 255, 255)\"\n})\n\n//Components\n\n\nexport function useIsVisible(ref) {\n    const [isIntersecting, setIntersecting] = useState(false);\n\n    useEffect(() => {\n        let options = {\n            rootMargin: \"1000px\"\n        }\n        const observer = new IntersectionObserver(([entry]) => {\n            setIntersecting(entry.isIntersecting)\n        }, options)\n\n        observer.observe(ref.current);\n        return () => {\n            observer.disconnect();\n        };\n    }, [ref]);\n\n    return isIntersecting;\n}\n\n\nexport const MediaImage = ({\n    mediaData,\n    quality,\n    lazy,\n    ...props\n}) => {\n    const [imageLoaded, setImageLoaded] = useState(false)\n    const ref = useRef()\n    const isVisible = useIsVisible(ref)\n\n    const imgUrl = new URL(`${window.location.origin}/api/item/${mediaData.FileHash}`)\n    imgUrl.searchParams.append(quality, \"true\")\n\n    return (\n        <ThumbnailContainer ref={ref} >\n            {!imageLoaded && (\n                <StyledLoader size={20} />\n            )}\n\n            <img\n                height={\"100%\"}\n                width={\"100%\"}\n                loading={lazy ? \"lazy\" : \"eager\"}\n\n                {...props}\n\n                src={imgUrl.toString()}\n                style={{ position: \"absolute\", display: isVisible ? \"block\" : \"none\" }}\n\n                onLoad={() => { setImageLoaded(true) }}\n            />\n            {mediaData.BlurHash && lazy && !imageLoaded && (\n                <Blurhash\n                    style={{ position: \"absolute\" }}\n                    height={250}\n                    width={550}\n                    hash={mediaData.BlurHash}\n                />\n\n            )}\n        </ThumbnailContainer>\n    )\n}","import { useEffect, useRef, useState, useMemo } from 'react'\n\nimport Box from '@mui/material/Box'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport styled from '@emotion/styled'\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile'\nimport Typography from '@mui/material/Typography'\nimport Crumbs from './Crumbs'\n\nimport { MediaData } from '../types/Generic'\nimport { MediaImage } from './PhotoContainer'\n\nconst PresentationContainer = styled(Box)({\n    position: \"fixed\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\",\n    top: 0,\n    left: 0,\n    padding: \"25px\",\n    height: \"calc(100vh - 50px)\",\n    width: \"calc(100vw - 50px)\",\n    zIndex: 3,\n    backgroundColor: \"rgb(0, 0, 0, 0.92)\",\n})\n\nconst StyledMediaImage = styled(MediaImage)({\n    height: \"calc(100% - 40px)\",\n    width: \"calc(100% - 40px)\",\n    objectFit: \"contain\",\n    margin: \"20px\"\n})\n\nconst PresentationVisual = ({ mediaData }) => {\n    if (!mediaData) {\n        return\n    }\n    else if (mediaData.MediaType.IsVideo) {\n        return (\n            <StyledMediaImage key={`${mediaData.FileHash} thumbnail`} mediaData={mediaData} quality={\"thumbnail\"} lazy={false} />\n        )\n    } else if (mediaData.MediaType?.FriendlyName == \"File\") {\n        return (\n            // <Box display={\"flex\"} flexDirection={\"column\"} alignItems={\"center\"}>\n            <InsertDriveFileIcon style={{ width: \"80%\", height: \"80%\" }} onDragOver={() => { }} />\n            // </Box>\n        )\n    } else {\n        return (\n            <div style={{ height: \"100%\", width: \"100%\" }}>\n                <StyledMediaImage key={`${mediaData.FileHash} thumbnail`} mediaData={mediaData} quality={\"thumbnail\"} lazy={false} />\n                <StyledMediaImage key={`${mediaData.FileHash} fullres`} mediaData={mediaData} quality={\"fullres\"} lazy={false} />\n\n            </div>\n        )\n    }\n}\n\nfunction startKeyDownHandler(dispatch) {\n    console.log(\"AHH\")\n    const keyDownHandler = event => {\n        if (event.key === 'Escape') {\n            event.preventDefault()\n            dispatch({ type: 'stop_presenting' })\n        }\n        if (event.key === 'ArrowLeft') {\n            event.preventDefault()\n            dispatch({ type: 'presentation_previous' })\n        }\n        if (event.key === 'ArrowRight') {\n            event.preventDefault()\n            dispatch({ type: 'presentation_next' })\n        }\n    }\n    document.addEventListener('keydown', keyDownHandler)\n    return () => {\n        document.removeEventListener('keydown', keyDownHandler)\n    }\n}\n\nconst Presentation = ({ mediaData, dispatch }: { mediaData: MediaData, dispatch: React.Dispatch<any> }) => {\n    useEffect(() => {\n        return startKeyDownHandler(dispatch)\n    }, [])\n\n    return (\n        <PresentationContainer>\n            <PresentationVisual mediaData={mediaData} />\n\n            <IconButton\n                onClick={() => dispatch({ type: 'stop_presenting' })}\n                color={\"inherit\"}\n                sx={{ display: \"block\", position: \"absolute\", top: 15, left: 15, cursor: \"pointer\", zIndex: 100 }}\n            >\n                <CloseIcon />\n            </IconButton>\n            <Box position={\"absolute\"} top={10}>\n                <Crumbs path={mediaData?.Filepath} includeHome={false} navigate={() => { }} />\n            </Box>\n        </PresentationContainer>\n    )\n}\n\nexport default Presentation"],"names":["DeleteFile","path","url","URL","concat","window","location","origin","searchParams","append","fetch","toString","method","GetDirectoryData","dispatch","replace","then","res","json","data","type","items","StyledLazyThumb","styled","MediaImage","position","objectFit","cursor","overflow","transitionDuration","transform","humanFileSize","bytes","si","arguments","length","undefined","dp","thresh","Math","abs","units","u","r","pow","round","toFixed","dateFromItemData","itemData","date","Date","mediaData","CreateDate","getFullYear","modTime","toDateString","boxSX","outline","color","backgroundColor","ItemVisualComponent","_ref","isDir","imported","_jsx","FolderIcon","style","width","height","marginBottom","onDragOver","InsertDriveFileIcon","quality","lazy","Skeleton","animation","variant","EditingHook","_ref2","focused","useFormControl","_useState","useState","_useState2","_slicedToArray","previous","setPrevious","useEffect","_Fragment","TextBox","_ref4","editing","hasInfo","setRenameVal","filename","useMemo","filepath","substring","lastIndexOf","periodIndex","ext","slice","basename","_jsxs","FormControl","children","InputBase","autoFocus","placeholder","onClick","e","stopPropagation","onChange","target","value","endAdornment","Tooltip","title","enterNextDelay","Box","display","flexDirection","justifyContent","file","Typography","noWrap","margin","fontSize","size","Item","_ref5","_itemData$mediaData","anyChecked","navigate","_useState3","_useState4","hovering","setHovering","_useState5","_useState6","renameVal","newName","keyDownHandler","event","key","preventDefault","addEventListener","removeEventListener","StartKeybaordListener","unselectedAction","presentingPath","select","itempath","selected","borderRadius","sx","onMouseOver","onMouseLeave","onContextMenu","Checkbox","name","checked","zIndex","boxShadow","alignItems","MediaType","FriendlyName","p","bgcolor","bottom","textAlign","mapToList","dirMap","newList","Object","keys","map","sort","a","b","copyObject","newMap","i","_objectSpread","fileBrowserReducer","state","action","_step","_iterator","_createForOfIteratorHelper","s","n","done","item","err","f","_step2","_iterator2","files","tmpItem","newPath","loading","dragging","oldName","parentDir","_oldName$split","split","_oldName$split2","oldExt","_newName$split","_newName$split2","newExt","existingPath","RenameFile","numSelected","holdingShift","lastSelected","dirList","startIndex","findIndex","val","endIndex","_step3","changedCounter","_iterator3","_i","_Object$keys","_i2","_Object$keys2","shift","document","documentElement","console","error","HandleDrag","useParams","_useReducer","useReducer","Map","_useReducer2","filebrowserState","enqueueSnackbar","useSnackbar","_GetWebsocket","GetWebsocket","wsSend","lastMessage","readyState","scanProgress","setScanProgress","useNavigate","alreadyScanned","setAlreadyScanned","contextMenu","setContextMenu","handleClose","msgData","JSON","parse","dirItems","itemsList","scanRequired","entry","dispatchSync","HeaderBar","page","onDragLeave","onDrop","_step4","filteredFiles","_iterator4","dataTransfer","push","HandleFileUpload","HandleDrop","paddingLeft","paddingRight","minHeight","outlineOffset","mouseX","clientX","mouseY","clientY","Presentation","LinearProgress","left","IconButton","padding","Badge","badgeContent","CheckBoxIcon","itemsToDownload","_i3","_Object$values","values","log","body","stringify","takeoutId","status","Promise","reject","blob","aElement","createElement","setAttribute","href","createObjectURL","click","revokeObjectURL","reason","downloadSelected","DownloadIcon","DeleteIcon","marginTop","Crumbs","includeHome","flexWrap","Menu","open","onClose","anchorReference","anchorPosition","top","MenuItem","CreateDirectory","ListItemIcon","CreateNewFolderIcon","PostFile","content","readFile","resolve","fr","FileReader","onload","item64","result","onerror","readAsDataURL","filesData","snacky","WS_URL","host","dcTimeout","setDcTimeout","dcSnack","setDcSnack","_useWebSocket","useWebSocket","onOpen","clearTimeout","closeSnackbar","setTimeout","persist","preventDuplicate","reconnectAttempts","reconnectInterval","last","shouldReconnect","onReconnectStop","sendMessage","msg","recursive","customTheme","createTheme","palette","primary","main","contrastText","typography","fontWeightRegular","StyledBreadcrumb","label","success","Chip","fontWeight","emphasize","shadows","parts","pop","unshift","current","crumbPaths","entries","_step$value","index","crumbs","part","Breadcrumbs","separator","Search","theme","_defineProperty","shape","alpha","common","white","marginLeft","breakpoints","up","spacing","SearchIconWrapper","_ref3","pointerEvents","StyledInputBase","transition","transitions","create","memo","_useCookies","useCookies","_useCookies2","removeCookie","nav","flexGrow","pt","maxWidth","AppBar","Toolbar","edge","PhotoLibraryIcon","SyncIcon","id","hidden","accept","UploadIcon","SearchIcon","inputProps","search","LogoutIcon","ThumbnailContainer","StyledLoader","CircularProgress","right","props","_objectWithoutProperties","_excluded","imageLoaded","setImageLoaded","ref","useRef","isVisible","isIntersecting","setIntersecting","observer","IntersectionObserver","rootMargin","observe","disconnect","useIsVisible","imgUrl","FileHash","src","onLoad","BlurHash","Blurhash","hash","PresentationContainer","StyledMediaImage","PresentationVisual","_mediaData$MediaType","IsVideo","startKeyDownHandler","CloseIcon","Filepath"],"sourceRoot":""}