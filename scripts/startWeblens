#!/bin/bash

if [[ ! -e ./cmd ]]; then
  echo "ERR Could not find ./cmd directory, are you at the root of the repo? i.e. ~/repos/weblens and not ~/repos/weblens/scripts"
  exit 1
fi

mkdir -p ./build/bin
mkdir -p ./build/logs

restart=false
trace=false
docs=false
build_ui=false
config_name=$CONFIG_NAME

while [ "${1:-}" != "" ]; do
    case "$1" in
      "--config")
        shift
        config_name=$1
        ;;
      "-t" | "--trace")
        trace=true
        ;;
      "--ui")
        build_ui=true
        ;;
      "-r" | "--restart")
        restart=true
        ;;
      "-d" | "--docs")
      docs=true
        ;;
    esac
    shift
  done

if [[ -z "$config_name" ]]; then
  export config_name="DEBUG-CORE"
fi

printf "Using config: %s" "$config_name"
if [[ $trace == true ]]; then
  do_trace="trace"
  printf " +trace"
fi
printf "\n"

# Allow for easy restarts while debugging. If you send a SIGQUIT (Ctrl+\), 
# it will re[build/start] the server when $restart is true (cmd line option -r).
trap "" SIGQUIT

while true; do

  # if [[ -z "$detach_ui" ]]; then
  #   detach_ui=$DETACH_UI
  # fi
  #
  # if [[ -z "$detach_ui" ]]; then
  #   detach_ui=$(jq ".[\"$config_name\"].detachUi" < ./config/config.json)
  # fi

  if [[ $docs == true ]]; then
    printf "Building Docs..."
    if ! ./scripts/swaggo &> ./build/logs/docs-build.log; then
      printf " FAILED\n"
      cat ./build/logs/docs-build.log
      echo "Aborting Weblens startup. Failed to build docs"
      exit 1
    else
      printf " DONE\n"
    fi

  fi

  if [[ $build_ui == true ]]; then
    cd ./ui || exit
    printf "Building UI..."
    npm install &> /dev/null
    export VITE_APP_BUILD_TAG="DEV-BUILD"
    export VITE_BUILD=true

    if ! npm run build &> ../build/logs/ui-build.log; then
      printf " FAILED\n"
      cat ../build/logs/ui-build.log
      echo "Aborting Weblens startup. Ensure npm run build completes successfully before starting Weblens."
      exit 1
    else
      printf " DONE\n"
    fi

    cd ..
  fi

  printf "Building Weblens binary..."
  rm -f ./build/bin/weblens

  export GORACE="halt_on_error=1"
  go build -gcflags="all=-N -l" -race -o ./build/bin/weblens ./cmd/weblens/main.go &> ./build/logs/weblens-build.log

  if [[ ! -e ./build/bin/weblens ]]; then
    printf " FAILED\n"
    cat ./build/logs/weblens-build.log
    echo "Failed to build Weblens, exiting..."
    exit 1
  fi
  printf " DONE\n"

  APP_ROOT=$(pwd) CONFIG_NAME=$config_name LOG_LEVEL=$do_trace ./build/bin/weblens
  exit=$?

  if [[ $restart == false ]] || { [[ $exit != 0 ]] && [[ $exit != 137 ]]; }; then
    echo "Got exist status $exit, exiting..."
    break
  fi
  clear

done

