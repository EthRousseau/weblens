#!/bin/bash

if [[ ! -e ./cmd ]]; then
  echo "ERR Could not find ./cmd directory, are you at the root of the repo? i.e. ~/repos/weblens and not ~/repos/weblens/scripts"
  exit 1
fi

mkdir -p ./build/bin
mkdir -p ./build/logs

restart=false
trace=false
config_name=$CONFIG_NAME

while getopts "trc:" opt; do
  case $opt in
    t) trace=true
    ;;
    r) restart=true
    ;;
    c) config_name="$OPTARG"
    ;;
    \?) echo "Invalid option -$OPTARG" >&2
    exit 1
    ;;
  esac

  case $OPTARG in
    -*) echo "Option $opt needs a valid argument"
    exit 1
    ;;
  esac
done

if [[ -z "$config_name" ]]; then
  export config_name="DEBUG-CORE"
fi

printf "Using config: $config_name"
if [[ $trace == true ]]; then
  do_trace="trace"
  printf " +trace"
fi
printf "\n"

# Allow for easy restarts while debugging. If you send a SIGQUIT (Ctrl+\), 
# it will re[build/start] the server when $restart is true (cmd line option -r).
trap "" SIGQUIT

while true; do

  if [[ -z "$detach_ui" ]]; then
    detach_ui=$DETACH_UI
  fi

  if [[ -z "$detach_ui" ]]; then
    detach_ui=$(cat ./config/config.json | jq ".[\"$config_name\"].detachUi")
  fi

  if [[ "$detach_ui" != "true" ]]; then
    cd ./ui
    printf "Building UI..."
    npm install &> /dev/null
    export VITE_APP_BUILD_TAG="DEV-BUILD"
    export VITE_BUILD=true
    npm run build &> ../build/logs/ui-build.log

    if [ $? != 0 ]; then
      printf " FAILED\n"
      echo "Aborting Weblens startup. Ensure npm run build completes successfully before starting Weblens."
      echo "Check ../build/logs/ui-build.log for more information."
      exit 1
    else
      printf " DONE\n"
    fi

    cd ..
  fi


  printf "Building Weblens binary..."
  rm -f ./build/bin/weblens

  GORACE="halt_on_error=1"
  go build -gcflags="-N -l" -race -o ./build/bin/weblens ./cmd/weblens/main.go &> ./build/logs/weblens-build.log

  if [[ ! -e ./build/bin/weblens ]]; then
    print " FAILED\n"
    echo "Failed to build Weblens, exiting..."
    exit 1
  fi
  printf " DONE\n"

  APP_ROOT=$(pwd) CONFIG_NAME=$config_name LOG_LEVEL=$do_trace ./build/bin/weblens
  exit=$?

  if [[ $restart == false ]] || [[ $exit != 0 ]]; then
    echo "Got exist status $exit, exiting..."
    break
  fi
  clear

done

